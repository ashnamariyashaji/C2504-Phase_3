@echo off
setlocal

REM Set source and backup directory
set "SOURCE=C:\TestFiles"
set "BACKUP_ROOT=D:\Backups"

REM Get current date in YYYYMMDD format using WMIC
for /f "tokens=2 delims==" %%I in ('wmic os get localdatetime /value ^| find "="') do set "DATETIME=%%I"
set "DATE=%DATETIME:~0,8%"  REM Format: YYYYMMDD

set "BACKUP_DIR=%BACKUP_ROOT%\%DATE%"
set "LOG_FILE=%BACKUP_DIR%\backup_log.txt"

REM Create backup directory if it doesn't exist
if not exist "%BACKUP_DIR%" (
    mkdir "%BACKUP_DIR%"
)

REM Copy files from source to backup directory
set "FILE_COUNT=0"
for %%F in ("%SOURCE%\*") do (
    copy "%%F" "%BACKUP_DIR%"
    if not errorlevel 1 (
        set /a FILE_COUNT+=1
    )
)

REM Log the backup information
(
    echo Backup Date: %DATE%
    echo Backup Time: %TIME%
    echo Number of files copied: %FILE_COUNT%
) >> "%LOG_FILE%"

REM Cleanup old backups (older than 7 days)
for /d %%D in ("%BACKUP_ROOT%\*") do (
    REM Get the last modified date of the directory
    forfiles /p "%%D" /d -7 >nul 2>&1
    if not errorlevel 1 (
        echo Deleting old backup: %%D
        rmdir /s /q "%%D"
    )
)

echo Backup completed successfully!
pause



---------------------------------
# Set the source and backup directories
$sourceDir = "C:\TestFiles"
$backupDir = "D:\Backups"
$backupDate = Get-Date -Format "yyyyMMdd"
$backupPath = Join-Path -Path $backupDir -ChildPath $backupDate
$logFile = Join-Path -Path $backupPath -ChildPath "backup_log.txt"

# Create the backup directory if it doesn't exist
if (!(Test-Path -Path $backupPath)) {
    New-Item -ItemType Directory -Path $backupPath
}

# Copy files from the source to the backup directory
$filesCopied = Copy-Item -Path "$sourceDir\*" -Destination $backupPath -Recurse -PassThru

# Log the date, time, and number of files copied
$logEntry = "Backup Date and Time: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" + "`r`n"
$logEntry += "Number of Files Copied: $($filesCopied.Count)" + "`r`n"

Add-Content -Path $logFile -Value $logEntry

# Cleanup old backup directories (older than 7 days)
$sevenDaysAgo = (Get-Date).AddDays(-7)
Get-ChildItem -Path $backupDir | Where-Object {
    $_.PSIsContainer -and ($_.Name -match '^\d{8}$') -and
    ([datetime]::ParseExact($_.Name, 'yyyyMMdd', $null) -lt $sevenDaysAgo)
} | Remove-Item -Recurse -Force

